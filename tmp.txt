class DashManager
    {
        private bool hasToDash;

        private float dashDistance; // Distance covered by the player character during a dash

        private float dashDuration; // Duration of the dash animation in seconds


        public DashManager()
        {
            hasToDash = false;
            dashDistance = 2.5f;
            dashDuration = 0.1f;
        }


        public void HasToDash() {
            hasToDash = true;
        }

        public bool GetHasToDash() {
            return hasToDash;
        }

        public IEnumerator Dash(Movement movement, Rigidbody2D rigidbody2D) {
            hasToDash = false;
            movement.SetIsOnAnimation(true);

            Vector2 dashDirection = Vector2.zero;
            switch (movement.GetLastDirection())
            {
                case 'S':
                    dashDirection = new Vector2(0, -1);
                    break;
                case 'N':
                    dashDirection = new Vector2(0, 1);
                    break;
                case 'W':
                    dashDirection = new Vector2(-1, 0);
                    break;
                case 'E':
                    dashDirection = new Vector2(1, 0);
                    break;

                default:
                    break;
            }
 

            float elapsedTime = 0f;
            while (elapsedTime < dashDuration)
            {
                rigidbody2D.velocity = new Vector2(dashDirection.x * (dashDistance / dashDuration) * Time.deltaTime, dashDirection.y *(dashDistance / dashDuration) * Time.deltaTime);
                elapsedTime += Time.deltaTime;
                yield return null;
            }
            movement.SetIsOnAnimation(false);
            rigidbody2D.velocity = Vector2.zero;
        }
    }